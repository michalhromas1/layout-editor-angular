:host {
  display: grid;
  flex-shrink: 1;
  flex-basis: 0;
  min-height: 10rem;
}

.column {
  position: relative;
  border: var(--column-border-width) solid darkblue;

  &:not(.has-dropped-items) {
    & > .slot-wrapper {
      height: 100%;
    }

    & > .fake-dropzone {
      padding: 0;
    }
  }

  &:not(.innermost) {
    padding: var(--editor-column-spacing);
    height: 100%;
  }

  &:not(.preview) {
    background: #f5f5f5;

    &.hovered {
      border-color: darkorange;

      & > button {
        display: block;
      }

      & > .resizer {
        display: block;
      }
    }

    &.innermost {
      background: red;
    }
  }

  &.preview {
    padding: 0;

    &:not(.innermost) {
      border: none;
    }

    .slot-wrapper {
      padding: 0;
    }
  }

  .dropzone,
  .fake-dropzone {
    display: grid;
    row-gap: 1rem;
    padding: 1rem;
    align-content: flex-start;
  }

  .fake-dropzone {
    .content-item {
      align-items: stretch;
      justify-content: stretch;
    }
  }

  .dropzone {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
  }
}

.fake-content-item {
  height: 0;
  visibility: hidden;
  border: none;
}

.slot-wrapper {
  display: grid;
  row-gap: var(--editor-column-spacing);
  column-gap: var(--editor-column-spacing);
}

button {
  position: absolute;
  border-radius: 100%;
  width: 3rem;
  height: 3rem;
  display: grid;
  justify-content: center;
  align-items: center;
  background: #fff;
  z-index: 10;
  display: none;
  cursor: pointer;

  &.add-column {
    right: 0;
    top: 0;
    transform: translate(50%, -50%);
  }

  &.add-row {
    bottom: 0;
    left: 50%;
    transform: translate(-50%, +50%);
  }

  &.remove-column {
    top: 0;
    left: 0;
    transform: translate(-50%, -50%);
  }
}

.dropped-item.selected {
  background: lightblue;
}

.resizer {
  position: absolute;
  top: calc(-1 * (var(--column-border-width)));
  bottom: calc(-1 * (var(--column-border-width)));
  background: yellow;
  width: 0.7rem;
  cursor: col-resize;
  display: none;

  &-left {
    left: calc(-1 * (var(--column-border-width)));
  }

  &-right {
    right: calc(-1 * (var(--column-border-width)));
  }
}

input {
  width: 100%;
}
